<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class ExamDone extends \Entities\ExamDone implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setMarks($marks)
    {
        $this->__load();
        return parent::setMarks($marks);
    }

    public function getMarks()
    {
        $this->__load();
        return parent::getMarks();
    }

    public function setGrade($grade)
    {
        $this->__load();
        return parent::setGrade($grade);
    }

    public function getGrade()
    {
        $this->__load();
        return parent::getGrade();
    }

    public function setComments($comments)
    {
        $this->__load();
        return parent::setComments($comments);
    }

    public function getComments()
    {
        $this->__load();
        return parent::getComments();
    }

    public function setDateCreated($dateCreated)
    {
        $this->__load();
        return parent::setDateCreated($dateCreated);
    }

    public function getDateCreated()
    {
        $this->__load();
        return parent::getDateCreated();
    }

    public function setDateLastModified($dateLastModified)
    {
        $this->__load();
        return parent::setDateLastModified($dateLastModified);
    }

    public function getDateLastModified()
    {
        $this->__load();
        return parent::getDateLastModified();
    }

    public function setIsValid($isValid)
    {
        $this->__load();
        return parent::setIsValid($isValid);
    }

    public function getIsValid()
    {
        $this->__load();
        return parent::getIsValid();
    }

    public function setSubjectInstance(\Entities\SubjectInstance $subjectInstance = NULL)
    {
        $this->__load();
        return parent::setSubjectInstance($subjectInstance);
    }

    public function getSubjectInstance()
    {
        $this->__load();
        return parent::getSubjectInstance();
    }

    public function setStudent(\Entities\Student $student = NULL)
    {
        $this->__load();
        return parent::setStudent($student);
    }

    public function getStudent()
    {
        $this->__load();
        return parent::getStudent();
    }

    public function setExam(\Entities\Exam $exam = NULL)
    {
        $this->__load();
        return parent::setExam($exam);
    }

    public function getExam()
    {
        $this->__load();
        return parent::getExam();
    }

    public function setExamDoneStatus(\Entities\ExamDoneStatus $examDoneStatus = NULL)
    {
        $this->__load();
        return parent::setExamDoneStatus($examDoneStatus);
    }

    public function getExamDoneStatus()
    {
        $this->__load();
        return parent::getExamDoneStatus();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'marks', 'grade', 'comments', 'date_created', 'date_last_modified', 'is_valid', 'subject_instance', 'student', 'exam', 'exam_done_status');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}