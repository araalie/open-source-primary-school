<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Transaction extends \Entities\Transaction implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setCreatedBy($createdBy)
    {
        $this->__load();
        return parent::setCreatedBy($createdBy);
    }

    public function getCreatedBy()
    {
        $this->__load();
        return parent::getCreatedBy();
    }

    public function setNarrative($narrative)
    {
        $this->__load();
        return parent::setNarrative($narrative);
    }

    public function getNarrative()
    {
        $this->__load();
        return parent::getNarrative();
    }

    public function setPaySlipNumber($paySlipNumber)
    {
        $this->__load();
        return parent::setPaySlipNumber($paySlipNumber);
    }

    public function getPaySlipNumber()
    {
        $this->__load();
        return parent::getPaySlipNumber();
    }

    public function setDateDone($dateDone)
    {
        $this->__load();
        return parent::setDateDone($dateDone);
    }

    public function getDateDone()
    {
        $this->__load();
        return parent::getDateDone();
    }

    public function setDateCreated($dateCreated)
    {
        $this->__load();
        return parent::setDateCreated($dateCreated);
    }

    public function getDateCreated()
    {
        $this->__load();
        return parent::getDateCreated();
    }

    public function setDateLastModified($dateLastModified)
    {
        $this->__load();
        return parent::setDateLastModified($dateLastModified);
    }

    public function getDateLastModified()
    {
        $this->__load();
        return parent::getDateLastModified();
    }

    public function setIsValid($isValid)
    {
        $this->__load();
        return parent::setIsValid($isValid);
    }

    public function getIsValid()
    {
        $this->__load();
        return parent::getIsValid();
    }

    public function setTransactionType(\Entities\TransactionType $transactionType = NULL)
    {
        $this->__load();
        return parent::setTransactionType($transactionType);
    }

    public function getTransactionType()
    {
        $this->__load();
        return parent::getTransactionType();
    }

    public function setTransactionStatus(\Entities\TransactionStatus $transactionStatus = NULL)
    {
        $this->__load();
        return parent::setTransactionStatus($transactionStatus);
    }

    public function getTransactionStatus()
    {
        $this->__load();
        return parent::getTransactionStatus();
    }

    public function setTerm(\Entities\Term $term = NULL)
    {
        $this->__load();
        return parent::setTerm($term);
    }

    public function getTerm()
    {
        $this->__load();
        return parent::getTerm();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'created_by', 'narrative', 'pay_slip_number', 'date_done', 'date_created', 'date_last_modified', 'is_valid', 'transaction_type', 'transaction_status', 'term');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}