<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Term extends \Entities\Term implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setDateBegan($dateBegan)
    {
        $this->__load();
        return parent::setDateBegan($dateBegan);
    }

    public function getDateBegan()
    {
        $this->__load();
        return parent::getDateBegan();
    }

    public function setDateEnded($dateEnded)
    {
        $this->__load();
        return parent::setDateEnded($dateEnded);
    }

    public function getDateEnded()
    {
        $this->__load();
        return parent::getDateEnded();
    }

    public function setDateCreated($dateCreated)
    {
        $this->__load();
        return parent::setDateCreated($dateCreated);
    }

    public function getDateCreated()
    {
        $this->__load();
        return parent::getDateCreated();
    }

    public function setDateLastModified($dateLastModified)
    {
        $this->__load();
        return parent::setDateLastModified($dateLastModified);
    }

    public function getDateLastModified()
    {
        $this->__load();
        return parent::getDateLastModified();
    }

    public function setIsValid($isValid)
    {
        $this->__load();
        return parent::setIsValid($isValid);
    }

    public function getIsValid()
    {
        $this->__load();
        return parent::getIsValid();
    }

    public function setAcademicYear(\Entities\AcademicYear $academicYear = NULL)
    {
        $this->__load();
        return parent::setAcademicYear($academicYear);
    }

    public function getAcademicYear()
    {
        $this->__load();
        return parent::getAcademicYear();
    }

    public function setTermStatus(\Entities\TermStatus $termStatus = NULL)
    {
        $this->__load();
        return parent::setTermStatus($termStatus);
    }

    public function getTermStatus()
    {
        $this->__load();
        return parent::getTermStatus();
    }

    public function setTermType(\Entities\TermType $termType = NULL)
    {
        $this->__load();
        return parent::setTermType($termType);
    }

    public function getTermType()
    {
        $this->__load();
        return parent::getTermType();
    }

    public function setPreviousTerm(\Entities\Term $previousTerm = NULL)
    {
        $this->__load();
        return parent::setPreviousTerm($previousTerm);
    }

    public function getPreviousTerm()
    {
        $this->__load();
        return parent::getPreviousTerm();
    }

    public function setNextTerm(\Entities\Term $nextTerm = NULL)
    {
        $this->__load();
        return parent::setNextTerm($nextTerm);
    }

    public function getNextTerm()
    {
        $this->__load();
        return parent::getNextTerm();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'name', 'description', 'date_began', 'date_ended', 'date_created', 'date_last_modified', 'is_valid', 'academic_year', 'term_status', 'term_type', 'previous_term', 'next_term');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}