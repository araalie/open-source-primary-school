<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class AccountPosting extends \Entities\AccountPosting implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setAmount($amount)
    {
        $this->__load();
        return parent::setAmount($amount);
    }

    public function getAmount()
    {
        $this->__load();
        return parent::getAmount();
    }

    public function setDateCreated($dateCreated)
    {
        $this->__load();
        return parent::setDateCreated($dateCreated);
    }

    public function getDateCreated()
    {
        $this->__load();
        return parent::getDateCreated();
    }

    public function setDateLastModified($dateLastModified)
    {
        $this->__load();
        return parent::setDateLastModified($dateLastModified);
    }

    public function getDateLastModified()
    {
        $this->__load();
        return parent::getDateLastModified();
    }

    public function setIsValid($isValid)
    {
        $this->__load();
        return parent::setIsValid($isValid);
    }

    public function getIsValid()
    {
        $this->__load();
        return parent::getIsValid();
    }

    public function setTransaction(\Entities\Transaction $transaction = NULL)
    {
        $this->__load();
        return parent::setTransaction($transaction);
    }

    public function getTransaction()
    {
        $this->__load();
        return parent::getTransaction();
    }

    public function setAccount(\Entities\Account $account = NULL)
    {
        $this->__load();
        return parent::setAccount($account);
    }

    public function getAccount()
    {
        $this->__load();
        return parent::getAccount();
    }

    public function setStudentFeeType(\Entities\StudentFeeType $studentFeeType = NULL)
    {
        $this->__load();
        return parent::setStudentFeeType($studentFeeType);
    }

    public function getStudentFeeType()
    {
        $this->__load();
        return parent::getStudentFeeType();
    }

    public function setAccountPostingStatus(\Entities\AccountPostingStatus $accountPostingStatus = NULL)
    {
        $this->__load();
        return parent::setAccountPostingStatus($accountPostingStatus);
    }

    public function getAccountPostingStatus()
    {
        $this->__load();
        return parent::getAccountPostingStatus();
    }

    public function setDebt(\Entities\Debt $debt = NULL)
    {
        $this->__load();
        return parent::setDebt($debt);
    }

    public function getDebt()
    {
        $this->__load();
        return parent::getDebt();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'amount', 'date_created', 'date_last_modified', 'is_valid', 'transaction', 'account', 'student_fee_type', 'account_posting_status', 'debt');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}